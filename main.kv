#:kivy 1.1.1
#:import NoTransition kivy.uix.screenmanager.NoTransition

<MyTextInput@MDTextField>:
    mode: "rectangle"
    font_size: "20dp"

<MyButton@MDRaisedButton>:
    size_hint: 1, 1

MyScreenManager:
    transition: NoTransition()

    Day:
        name: "day"

        BoxLayout:
            orientation: "vertical"
            padding: "25dp", "30dp", "25dp", "30dp"
            spacing: "20dp"
                
            BoxLayout:
                orientation: "vertical"
                size_hint: 1, 0.9

                MDRectangleFlatButton:
                    size_hint: 1, 1
                    font_size: "18dp"
                    id: day_date
                    text: app.day["date"]
                    on_press: app.show_date_picker("day")

            BoxLayout:
                orientation: "vertical"

                MyTextInput:
                    id: start
                    input_filter: "int"
                    input_type: "number"
                    hint_text: "Показания одометра в начале смены"
                    text: app.day["start"]
                    on_text: app.check_input_number(id="start", text=self.text)
                    on_focus: if self.focus: self.text = ""
                    on_focus: if not self.focus and self.text: app.calculation_and_update_total(start=self.text)
                    on_focus: if not self.focus and not self.text: self.text = app.day["start"]

            BoxLayout:
                orientation: "vertical"

                MyTextInput:
                    id: stop
                    input_filter: "int"
                    input_type: "number"
                    hint_text: "Показания одометра в конце смены"
                    text: app.day["stop"]
                    on_text: app.check_input_number(id="stop", text=self.text)
                    on_focus: if self.focus: self.text = ""
                    on_focus: if not self.focus and self.text: app.calculation_and_update_total(stop=self.text)
                    on_focus: if not self.focus and not self.text: self.text = app.day["stop"]
            
            BoxLayout:
                spacing: "20dp"

                MyTextInput:
                    id: total
                    readonly: True
                    hint_text: "Пробег за смену"
                    text: app.day["total"]
                    on_text: fuel_consumed.text = str(app.calculation_and_update_fuel_consumed(self.text, day_date.text))

                MyTextInput:
                    id: fuel_consumed
                    readonly: True
                    font_size: "18dp"
                    hint_text: "Затрачено топлива"
                    text: str(app.calculation_and_update_fuel_consumed(total.text, day_date.text))

            BoxLayout:
                spacing: "20dp"

                MyTextInput:
                    id: fueling_in_liters
                    input_type: "number"
                    hint_text: "Заправка в литрах"
                    text: app.day["fueling_in_liters"]
                    on_text: app.check_input_number(id="fueling_in_liters", text=self.text)
                    on_focus: if self.focus: self.text = ""
                    on_focus: if not self.focus: app.update_fueling(id="fueling_in_liters", text=self.text)

                MyTextInput:
                    id: fueling_in_rubles
                    input_type: "number"
                    hint_text: "Заправка в рублях"
                    text: app.day["fueling_in_rubles"]
                    on_text: app.check_input_number(id="fueling_in_rubles", text=self.text)
                    on_focus: if self.focus: self.text = ""
                    on_focus: if not self.focus: app.update_fueling(id="fueling_in_rubles", text=self.text)
            
            BoxLayout:
                orientation: "vertical"
                
                MyTextInput:
                    id: fuel_card_balance
                    input_type: "number"
                    hint_text: "Остаток на топливной карте"
                    text: app.day["fuel_card_balance"]
                    on_text: app.check_input_number(id="fuel_card_balance", text=self.text)
                    on_focus: if self.focus: self.text = ""
                    on_focus: if not self.focus: app.update_fuel_card_balance(text=self.text)

            BoxLayout:
                size_hint: 1, 2.7
                orientation: "vertical"

                MyTextInput:
                    id: route
                    multiline: True
                    size_hint: 1, 1
                    hint_text: "Маршрут"
                    text: app.day["route"]
                    on_focus: if not self.focus: app.update_route(self.text)
                    on_text: app.unfocus_route_input(self.text)
                    
            BoxLayout:
                orientation: "vertical"
                size_hint: 1, 1.9
                padding: "15dp", "30dp", "15dp", "15dp"
                spacing: "30dp"

                BoxLayout:
                    spacing: "20dp"

                    MyButton:
                        text: "В меню"
                        on_press: root.current = "menu"

                    MyButton:
                        text: "Новая смена"
                        on_press: if app.day["date"]!="Дата": app.confirmation_start_new_day()
                        on_press: if app.day["date"]=="Дата": app.show_dialog_incorrect_date()

    Menu:
        name: "menu"

        BoxLayout:
            orientation: "vertical"
            padding: "20dp", "40dp", "20dp", "30dp"
            spacing: "30dp"

            BoxLayout:
                orientation: "vertical"
                spacing: "20dp"
                size_hint: 0.8, 0.5
                pos_hint: {"center_x": .5, "center_y": .5}

                MyButton:
                    text: "Редактирование записи"
                    on_press: app.show_date_picker("editing")

                MyButton:
                    text: "Просмотр записей"
                    on_press: app.show_date_picker("view")
            
            BoxLayout:
                size_hint: 1, 0.5

            BoxLayout:
                size_hint: 0.8, 0.2
                pos_hint: {"center_x": .5, "center_y": .5}

                MyButton:
                    text: "Настройки"
                    on_press: root.current = "setting"

            BoxLayout:
                size_hint: 0.5, 0.1
                pos_hint: {"center_x": .5, "center_y": .5}

                MyButton:
                    text: "Возврат"
                    on_press: root.current = "day"

    Setting:
        name: "setting"

        BoxLayout:
            orientation: "vertical"
            padding: "20dp", "40dp", "20dp", "30dp"
            spacing: "30dp"

            BoxLayout:
                size_hint: 1, 0.2
                MyTextInput:
                    id: work_shift_cost
                    input_filter: "int"
                    input_type: "number"
                    hint_text: "Стоимость одной смены"
                    text: app.settings["work_shift_cost"]
                    on_text: app.check_input_number(id="work_shift_cost", text=self.text)
                    on_focus: if self.focus and self.text == "Не настроено": self.text = ""
                    on_focus: if not self.focus: app.setting_work_shift_cost(self.text)
            
            BoxLayout:
                orientation: "vertical"
                size_hint: 1, 1.1
                background_color: (205/255, 205/255, 205/255, 1)

                canvas.before:
                    Color:
                        rgba: self.background_color
                    RoundedRectangle:
                        size: (self.size[0] + 20, self.size[1] + 20)
                        pos: (self.pos[0] - 10, self.pos[1] - 10)

                BoxLayout:
                    size_hint: 1, 0.15
                    padding: "0dp", "0dp", "0dp", "10dp"
                    MDLabel:
                        halign: "center"
                        text: "Потребление топлива на 100км."

                BoxLayout:
                    orientation: "vertical"
                    size_hint: 1, 1.1

                        
                    BoxLayout:
                        spacing: "100dp"
                        
                        MyTextInput:
                            id: fuel_consumption_per_100_km_summer
                            input_type: "number"
                            hint_text: "Лето."
                            text: app.settings["fuel_consumption_per_100_km_summer"]
                            on_text: app.check_input_number(id="fuel_consumption_per_100_km_summer", text=self.text)
                            on_focus: if self.focus and self.text == " ": self.text = ""
                            on_focus: if not self.focus: app.setting_fuel_consumption_per_100_km("fuel_consumption_per_100_km_summer", self.text)

                        MyTextInput:
                            id: fuel_consumption_per_100_km_winter
                            input_type: "number"
                            hint_text: "Зима."
                            text: app.settings["fuel_consumption_per_100_km_winter"]
                            on_text: app.check_input_number(id="fuel_consumption_per_100_km_winter", text=self.text)
                            on_focus: if self.focus and self.text == " ": self.text = ""
                            on_focus: if not self.focus: app.setting_fuel_consumption_per_100_km("fuel_consumption_per_100_km_winter", self.text)

                    BoxLayout:
                        size_hint: 1, 0.2

                    BoxLayout:
                        size_hint: 1, 5
                        BoxLayout:
                            orientation: "vertical"

                            MDCheckbox:
                                id: summer_01
                                active: app.get_active_month("summer_01")
                                on_active: if self.active: winter_01.active = False
                                on_active: if not self.active: winter_01.active = True
                                on_active: if self.active: app.choice_of_season("summer_01", "winter_01")
                            MDCheckbox:
                                id: summer_02
                                active: app.get_active_month("summer_02")
                                on_active: if self.active: winter_02.active = False
                                on_active: if not self.active: winter_02.active = True
                                on_active: if self.active: app.choice_of_season("summer_02", "winter_02")
                            MDCheckbox:
                                id: summer_03
                                active: app.get_active_month("summer_03")
                                on_active: if self.active: winter_03.active = False
                                on_active: if not self.active: winter_03.active = True
                                on_active: if self.active: app.choice_of_season("summer_03", "winter_03")
                            MDCheckbox:
                                id: summer_04
                                active: app.get_active_month("summer_04")
                                on_active: if self.active: winter_04.active = False
                                on_active: if not self.active: winter_04.active = True
                                on_active: if self.active: app.choice_of_season("summer_04", "winter_04")
                            MDCheckbox:
                                id: summer_05
                                active: app.get_active_month("summer_05")
                                on_active: if self.active: winter_05.active = False
                                on_active: if not self.active: winter_05.active = True
                                on_active: if self.active: app.choice_of_season("summer_05", "winter_05")
                            MDCheckbox:
                                id: summer_06
                                active: app.get_active_month("summer_06")
                                on_active: if self.active: winter_06.active = False
                                on_active: if not self.active: winter_06.active = True
                                on_active: if self.active: app.choice_of_season("summer_06", "winter_06")
                            MDCheckbox:
                                id: summer_07
                                active: app.get_active_month("summer_07")
                                on_active: if self.active: winter_07.active = False
                                on_active: if not self.active: winter_07.active = True
                                on_active: if self.active: app.choice_of_season("summer_07", "winter_07")
                            MDCheckbox:
                                id: summer_08
                                active: app.get_active_month("summer_08")
                                on_active: if self.active: winter_08.active = False
                                on_active: if not self.active: winter_08.active = True
                                on_active: if self.active: app.choice_of_season("summer_08", "winter_08")
                            MDCheckbox:
                                id: summer_09
                                active: app.get_active_month("summer_09")
                                on_active: if self.active: winter_09.active = False
                                on_active: if not self.active: winter_09.active = True
                                on_active: if self.active: app.choice_of_season("summer_09", "winter_09")
                            MDCheckbox:
                                id: summer_10
                                active: app.get_active_month("summer_10")
                                on_active: if self.active: winter_10.active = False
                                on_active: if not self.active: winter_10.active = True
                                on_active: if self.active: app.choice_of_season("summer_10", "winter_10")
                            MDCheckbox:
                                id: summer_11
                                active: app.get_active_month("summer_11")
                                on_active: if self.active: winter_11.active = False
                                on_active: if not self.active: winter_11.active = True
                                on_active: if self.active: app.choice_of_season("summer_11", "winter_11")
                            MDCheckbox:
                                id: summer_12
                                active: app.get_active_month("summer_12")
                                on_active: if self.active: winter_12.active = False
                                on_active: if not self.active: winter_12.active = True
                                on_active: if self.active: app.choice_of_season("summer_12", "winter_12")

                        BoxLayout:
                            orientation: "vertical"
                            
                            MDLabel:
                                halign: "center"
                                text: "Январь"
                            MDLabel:
                                halign: "center"
                                text: "Февраль"
                            MDLabel:
                                halign: "center"
                                text: "Март"
                            MDLabel:
                                halign: "center"
                                text: "Апрель"
                            MDLabel:
                                halign: "center"
                                text: "Май"
                            MDLabel:
                                halign: "center"
                                text: "Июнь"
                            MDLabel:
                                halign: "center"
                                text: "Июль"
                            MDLabel:
                                halign: "center"
                                text: "Август"
                            MDLabel:
                                halign: "center"
                                text: "Сентябрь"
                            MDLabel:
                                halign: "center"
                                text: "Октябрь"
                            MDLabel:
                                halign: "center"
                                text: "Ноябрь"
                            MDLabel:
                                halign: "center"
                                text: "Декабрь"
                            
                        BoxLayout:
                            orientation: "vertical"

                            MDCheckbox:
                                id: winter_01
                                active: app.get_active_month("winter_01")
                                on_active: if self.active: summer_01.active = False
                                on_active: if not self.active: summer_01.active = True
                                on_active: if self.active: app.choice_of_season("winter_01", "summer_01")

                            MDCheckbox:
                                id: winter_02
                                active: app.get_active_month("winter_02")
                                on_active: if self.active: summer_02.active = False
                                on_active: if not self.active: summer_02.active = True
                                on_active: if self.active: app.choice_of_season("winter_02", "summer_02")
                            MDCheckbox:
                                id: winter_03
                                active: app.get_active_month("winter_03")
                                on_active: if self.active: summer_03.active = False
                                on_active: if not self.active: summer_03.active = True
                                on_active: if self.active: app.choice_of_season("winter_03", "summer_03")
                            MDCheckbox:
                                id: winter_04
                                active: app.get_active_month("winter_04")
                                on_active: if self.active: summer_04.active = False
                                on_active: if not self.active: summer_04.active = True
                                on_active: if self.active: app.choice_of_season("winter_04", "summer_04")
                            MDCheckbox:
                                id: winter_05
                                active: app.get_active_month("winter_05")
                                on_active: if self.active: summer_05.active = False
                                on_active: if not self.active: summer_05.active = True
                                on_active: if self.active: app.choice_of_season("winter_05", "summer_05")
                            MDCheckbox:
                                id: winter_06
                                active: app.get_active_month("winter_06")
                                on_active: if self.active: summer_06.active = False
                                on_active: if not self.active: summer_06.active = True
                                on_active: if self.active: app.choice_of_season("winter_06", "summer_06")
                            MDCheckbox:
                                id: winter_07
                                active: app.get_active_month("winter_07")
                                on_active: if self.active: summer_07.active = False
                                on_active: if not self.active: summer_07.active = True
                                on_active: if self.active: app.choice_of_season("winter_07", "summer_07")
                            MDCheckbox:
                                id: winter_08
                                active: app.get_active_month("winter_08")
                                on_active: if self.active: summer_08.active = False
                                on_active: if not self.active: summer_08.active = True
                                on_active: if self.active: app.choice_of_season("winter_08", "summer_08")
                            MDCheckbox:
                                id: winter_09
                                active: app.get_active_month("winter_09")
                                on_active: if self.active: summer_09.active = False
                                on_active: if not self.active: summer_09.active = True
                                on_active: if self.active: app.choice_of_season("winter_09", "summer_09")
                            MDCheckbox:
                                id: winter_10
                                active: app.get_active_month("winter_10")
                                on_active: if self.active: summer_10.active = False
                                on_active: if not self.active: summer_10.active = True
                                on_active: if self.active: app.choice_of_season("winter_10", "summer_10")
                            MDCheckbox:
                                id: winter_11
                                active: app.get_active_month("winter_11")
                                on_active: if self.active: summer_11.active = False
                                on_active: if not self.active: summer_11.active = True
                                on_active: if self.active: app.choice_of_season("winter_11", "summer_11")
                            MDCheckbox:
                                id: winter_12
                                active: app.get_active_month("winter_12")
                                on_active: if self.active: summer_12.active = False
                                on_active: if not self.active: summer_12.active = True
                                on_active: if self.active: app.choice_of_season("winter_12", "summer_12")

            BoxLayout:
                size_hint: 1, 0.3

            MyButton:
                size_hint: 0.5, 0.1
                pos_hint: {"center_x": .5, "center_y": .5}
                text: "Назад"
                on_press: root.current = "menu"
                on_press: fuel_consumed.text = str(app.calculation_and_update_fuel_consumed(total.text, app.day["date"]))

    EditingRecordInDatabase:
        name: "editing_select_day"

        BoxLayout:
            orientation: "vertical"
            padding: "25dp", "40dp", "25dp", "30dp"
            spacing: "20dp"
                
            BoxLayout:
                orientation: "vertical"
                size_hint: 1, 0.6

                MyTextInput:
                    id: editing_date
                    readonly: True
                    hint_text: "Дата"
                    on_text: if self.text: root.current = "editing_select_day"
                    on_text: if not self.text: root.current = "menu"

            BoxLayout:
                orientation: "vertical"

                MyTextInput:
                    id: editing_start
                    input_filter: "int"
                    input_type: "number"
                    hint_text: "Показания одометра в начале смены"
                    on_text: app.check_input_number(id="editing_start", text=self.text)
                    on_focus: if not self.focus and editing_start.text and editing_stop.text and int(editing_start.text) < int(editing_stop.text): editing_total.text = str(int(editing_stop.text) - int(editing_start.text))

            BoxLayout:
                orientation: "vertical"

                MyTextInput:
                    id: editing_stop
                    input_filter: "int"
                    input_type: "number"
                    hint_text: "Показания одометра в конце смены"
                    on_text: app.check_input_number(id="editing_stop", text=self.text)
                    on_focus: if not self.focus and editing_start.text and editing_stop.text and int(editing_start.text) < int(editing_stop.text): editing_total.text = str(int(editing_stop.text) - int(editing_start.text))
            
            BoxLayout:
                spacing: "20dp"

                MyTextInput:
                    id: editing_total
                    readonly: True
                    hint_text: "Пробег за смену"
                    on_text: editing_fuel_consumed.text = str(app.calculation_and_update_fuel_consumed(self.text, editing_date.text))
                
                MyTextInput:
                    id: editing_fuel_consumed
                    readonly: True
                    font_size: "18dp"
                    hint_text: "Затрачено топлива"
                    text: str(app.calculation_and_update_fuel_consumed(editing_total.text, editing_date.text))

            BoxLayout:
                spacing: "20dp"

                MyTextInput:
                    id: editing_fueling_in_liters
                    input_type: "number"
                    hint_text: "Заправка в литрах"
                    on_text: app.check_input_number(id="editing_fueling_in_liters", text=self.text)

                MyTextInput:
                    id: editing_fueling_in_rubles
                    input_type: "number"
                    hint_text: "Заправка в рублях"
                    on_text: app.check_input_number(id="editing_fueling_in_rubles", text=self.text)
            
            BoxLayout:
                size_hint: 1, 2.7
                orientation: "vertical"

                MyTextInput:
                    id: editing_route
                    multiline: True
                    size_hint: 1, 1
                    hint_text: "Маршрут"
                    
            BoxLayout:
                orientation: "vertical"
                size_hint: 1, 1.9
                padding: "15dp", "36dp", "15dp", "21dp"
                spacing: "30dp"

                BoxLayout:
                    spacing: "20dp"

                    MyButton:
                        text: "Отмена"
                        on_press: editing_date.text = ""

                    MyButton:
                        text: "Сохранить Изменения"
                        on_press: app.confirmation_save_editing_day()

    ViewingRecordsFromDatabase:
        name: "viewing_records"

        BoxLayout:
            orientation: "vertical"
            padding: "25dp", "20dp", "25dp", "25dp"
            spacing: "20dp"

            BoxLayout:
                orientation: "vertical"
                size_hint: 1, 0.45
                background_color: (205/255, 205/255, 205/255, 1)
                canvas.before:
                    Color:
                        rgba: self.background_color
                    RoundedRectangle:
                        size: (self.size[0] + 20, self.size[1] + 20)
                        pos: (self.pos[0] - 10, self.pos[1] - 10)

                MDLabel:
                    id: total_for_period
                    size_hint: 1, 0.25
                    halign: "center"
                    on_text: if self.text: root.current = "viewing_records"
                    on_text: if not self.text: root.current = "menu"

                BoxLayout:

                    BoxLayout:
                        orientation: "vertical"
                        size_hint: 2.8, 1

                        MDLabel:
                            text: "Количество рабочих смен:"

                        MDLabel:
                            text: "Пройдено километров:"

                        MDLabel:
                            text: "Израсходовано топлива:"

                        MDLabel:
                            text: "Заправлено литров топлива:"
                        
                        MDLabel:
                            text: "Затраты на топливо:"
                        
                        MDLabel:
                            text: "Заработано рублей:"


                    BoxLayout:
                        orientation: "vertical"

                        MDLabel:
                            id: number_of_working_shifts
                            halign: "right"

                        MDLabel:
                            id: total_mileage
                            halign: "right"

                        MDLabel:
                            id: amount_of_fuel_used
                            halign: "right"

                        MDLabel:
                            id: fuel_filled
                            halign: "right"

                        MDLabel:
                            id: fuel_costs
                            halign: "right"
                        
                        MDLabel:
                            id: salary
                            halign: "right"
                            text: app.calculation_salary(number_of_working_shifts.text)
                    
            BoxLayout:
                orientation: "vertical"

                BoxLayout:
                    MDCheckbox:
                        id: checkbox_viewing_date
                        size_hint: 0.1, 1
                    MDLabel:
                        font_size: "14dp"
                        halign: "left"
                        text: "Дата:"
                MDLabel:
                    id: viewing_date
                    halign: "right"
                
                BoxLayout:
                    MDCheckbox:
                        id: checkbox_viewing_start
                        size_hint: 0.1, 1
                    MDLabel:
                        font_size: "14dp"
                        halign: "left"
                        text: "Показания одометра в начале смены:"
                MDLabel:
                    id: viewing_start
                    halign: "right"
                
                BoxLayout:
                    MDCheckbox:
                        id: checkbox_viewing_stop
                        size_hint: 0.1, 1
                    MDLabel:
                        font_size: "14dp"
                        halign: "left"
                        text: "Показания одометра в конце смены:"
                MDLabel:
                    id: viewing_stop
                    halign: "right"

                BoxLayout:
                    MDCheckbox:
                        id: checkbox_viewing_total
                        size_hint: 0.1, 1
                    MDLabel:
                        font_size: "14dp"
                        halign: "left"
                        text: "Пробег за смену:"
                MDLabel:
                    id: viewing_total
                    halign: "right"

                BoxLayout:
                    MDCheckbox:
                        id: checkbox_viewing_consumed_fuel
                        size_hint: 0.1, 1
                    MDLabel:
                        font_size: "14dp"
                        halign: "left"
                        text: "Израсходовано топлива:"
                MDLabel:
                    id: viewing_consumed_fuel
                    halign: "right"
                    text: "0"

                BoxLayout:
                    MDCheckbox:
                        id: checkbox_viewing_fueling_in_liters
                        size_hint: 0.1, 1
                    MDLabel:
                        font_size: "14dp"
                        halign: "left"
                        text: "Заправка в литрах:"
                MDLabel:
                    id: viewing_fueling_in_liters
                    halign: "right"
                
                BoxLayout:
                    MDCheckbox:
                        id: checkbox_viewing_fueling_in_rubles
                        size_hint: 0.1, 1
                    MDLabel:
                        font_size: "14dp"
                        halign: "left"
                        text: "Заправка в рублях:"
                MDLabel:
                    id: viewing_fueling_in_rubles
                    halign: "right"

                BoxLayout:
                    MDCheckbox:
                        id: checkbox_viewing_route
                        size_hint: 0.1, 1
                    MDLabel:
                        font_size: "14dp"
                        halign: "left"
                        text: "Маршрут:"
                ScrollView:
                    size_hint: 1, 2.5
                    MDLabel:
                        id: viewing_route
                        size_hint_y: None
                        height: self.texture_size[1]
                        halign: "right"

            BoxLayout:
                pos_hint: {"center_x": .5, "center_y": .5}
                size_hint: 1, 0.1
                spacing: "10dp"

                MyButton:
                    id: previous_record
                    font_size: "18dp"
                    text: "<<<"
                    on_press: app.switch_viewed_record(-1)

                MyButton:
                    text: "Копировать\n выбранные"
                    on_press: app.create_message("123", "qwe")

                MyButton:
                    id: next_record
                    font_size: "18dp"
                    text: ">>>"
                    on_press: app.switch_viewed_record(1)
            
            BoxLayout:
                size_hint: 0.5, 0.1
                pos_hint: {"center_x": .5, "center_y": .5}

                MyButton:
                    text: "Завершить\n просмотр"
                    on_press: total_for_period.text = ""
